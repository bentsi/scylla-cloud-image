#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright 2022 ScyllaDB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import yaml
import logging
import sys
sys.path.append('/opt/scylladb/scripts')
from scylla_util import is_developer_mode, etcdir, datadir
from lib.scylla_cloud import aws_instance, gcp_instance, azure_instance

if __name__ == "__main__":
    if not is_developer_mode():
        if aws_instance.is_aws_instance():
            idata = aws_instance()

            if not idata.is_supported_instance_class():
                logging.error('{} is not supported instance type, run "scylla_io_setup".'.format(idata.instance()))
                sys.exit(1)
            disk_properties = {}
            disk_properties["mountpoint"] = datadir()
            nr_disks = len(idata.ephemeral_disks())
            ## both i3 and i2 can run with 1 I/O Queue per shard
            if idata.instance() == "i3.large":
                disk_properties["read_iops"] = 111000
                disk_properties["read_bandwidth"] = 653925080
                disk_properties["write_iops"] = 36800
                disk_properties["write_bandwidth"] = 215066473
            elif idata.instance() == "i3.xlarge":
                disk_properties["read_iops"] = 200800
                disk_properties["read_bandwidth"] = 1185106376
                disk_properties["write_iops"] = 53180
                disk_properties["write_bandwidth"] = 423621267
            elif idata.instance_class() == "i3":
                disk_properties["read_iops"] = 411200 * nr_disks
                disk_properties["read_bandwidth"] = 2015342735 * nr_disks
                disk_properties["write_iops"] = 181500 * nr_disks
                disk_properties["write_bandwidth"] = 808775652 * nr_disks
            elif idata.instance_class() == "i3en":
                if idata.instance() == "i3en.large":
                    disk_properties["read_iops"] = 43315
                    disk_properties["read_bandwidth"] = 330301440
                    disk_properties["write_iops"] = 33177
                    disk_properties["write_bandwidth"] = 165675008
                elif idata.instance() in ("i3en.xlarge", "i3en.2xlarge"):
                    disk_properties["read_iops"] = 84480 * nr_disks
                    disk_properties["read_bandwidth"] = 666894336 * nr_disks
                    disk_properties["write_iops"] = 66969 * nr_disks
                    disk_properties["write_bandwidth"] = 333447168 * nr_disks
                else:
                    disk_properties["read_iops"] = 257024 * nr_disks
                    disk_properties["read_bandwidth"] = 2043674624 * nr_disks
                    disk_properties["write_iops"] = 174080 * nr_disks
                    disk_properties["write_bandwidth"] = 1024458752 * nr_disks
            elif idata.instance_class() == "i2":
                disk_properties["read_iops"] = 64000 * nr_disks
                disk_properties["read_bandwidth"] = 507338935 * nr_disks
                disk_properties["write_iops"] = 57100 * nr_disks
                disk_properties["write_bandwidth"] = 483141731 * nr_disks
            elif idata.instance_class() in ("c6gd", "m6gd", "r6gd", "x2gd"):
                if idata.instance_size() == "medium":
                    disk_properties["read_iops"] = 14808
                    disk_properties["read_bandwidth"] = 77869147
                    disk_properties["write_iops"] = 5972
                    disk_properties["write_bandwidth"] = 32820302
                elif idata.instance_size() == "large":
                    disk_properties["read_iops"] = 29690
                    disk_properties["read_bandwidth"] = 157712240
                    disk_properties["write_iops"] = 12148
                    disk_properties["write_bandwidth"] = 65978069
                elif idata.instance_size() == "xlarge":
                    disk_properties["read_iops"] = 59688
                    disk_properties["read_bandwidth"] = 318762880
                    disk_properties["write_iops"] = 24449
                    disk_properties["write_bandwidth"] = 133311808
                elif idata.instance_size() == "2xlarge":
                    disk_properties["read_iops"] = 119353
                    disk_properties["read_bandwidth"] = 634795733
                    disk_properties["write_iops"] = 49069
                    disk_properties["write_bandwidth"] = 266841680
                elif idata.instance_size() == "4xlarge":
                    disk_properties["read_iops"] = 237196
                    disk_properties["read_bandwidth"] = 1262309504
                    disk_properties["write_iops"] = 98884
                    disk_properties["write_bandwidth"] = 533938080
                elif idata.instance_size() == "8xlarge":
                    disk_properties["read_iops"] = 442945
                    disk_properties["read_bandwidth"] = 2522688939
                    disk_properties["write_iops"] = 166021
                    disk_properties["write_bandwidth"] = 1063041152
                elif idata.instance_size() == "12xlarge":
                    disk_properties["read_iops"] = 353691 * nr_disks
                    disk_properties["read_bandwidth"] = 1908192256 * nr_disks
                    disk_properties["write_iops"] = 146732 * nr_disks
                    disk_properties["write_bandwidth"] = 806399360 * nr_disks
                elif idata.instance_size() == "16xlarge":
                    disk_properties["read_iops"] = 426893 * nr_disks
                    disk_properties["read_bandwidth"] = 2525781589 * nr_disks
                    disk_properties["write_iops"] = 161740 * nr_disks
                    disk_properties["write_bandwidth"] = 1063389952 * nr_disks
                elif idata.instance_size() == "metal":
                    disk_properties["read_iops"] = 416257 * nr_disks
                    disk_properties["read_bandwidth"] = 2527296683 * nr_disks
                    disk_properties["write_iops"] = 156326 * nr_disks
                    disk_properties["write_bandwidth"] = 1063657088 * nr_disks
            elif idata.instance() == "im4gn.large":
                disk_properties["read_iops"] = 33943
                disk_properties["read_bandwidth"] = 288433525
                disk_properties["write_iops"] = 27877
                disk_properties["write_bandwidth"] = 126864680
            elif idata.instance() == "im4gn.xlarge":
                disk_properties["read_iops"] = 68122
                disk_properties["read_bandwidth"] = 576603520
                disk_properties["write_iops"] = 55246
                disk_properties["write_bandwidth"] = 254534954
            elif idata.instance() == "im4gn.2xlarge":
                disk_properties["read_iops"] = 136422
                disk_properties["read_bandwidth"] = 1152663765
                disk_properties["write_iops"] = 92184
                disk_properties["write_bandwidth"] = 508926453
            elif idata.instance() == "im4gn.4xlarge":
                disk_properties["read_iops"] = 273050
                disk_properties["read_bandwidth"] = 1638427264
                disk_properties["write_iops"] = 92173
                disk_properties["write_bandwidth"] = 1027966826
            elif idata.instance() == "im4gn.8xlarge":
                disk_properties["read_iops"] = 250241 * nr_disks
                disk_properties["read_bandwidth"] = 1163130709 * nr_disks
                disk_properties["write_iops"] = 86374 * nr_disks
                disk_properties["write_bandwidth"] = 977617664 * nr_disks
            elif idata.instance() == "im4gn.16xlarge":
                disk_properties["read_iops"] = 273030 * nr_disks
                disk_properties["read_bandwidth"] = 1638211413 * nr_disks
                disk_properties["write_iops"] = 92607 * nr_disks
                disk_properties["write_bandwidth"] = 1028340266 * nr_disks
            elif idata.instance() == "is4gen.medium":
                disk_properties["read_iops"] = 33965
                disk_properties["read_bandwidth"] = 288462506
                disk_properties["write_iops"] = 27876
                disk_properties["write_bandwidth"] = 126954200
            elif idata.instance() == "is4gen.large":
                disk_properties["read_iops"] = 68131
                disk_properties["read_bandwidth"] = 576654869
                disk_properties["write_iops"] = 55257
                disk_properties["write_bandwidth"] = 254551002
            elif idata.instance() == "is4gen.xlarge":
                disk_properties["read_iops"] = 136413
                disk_properties["read_bandwidth"] = 1152747904
                disk_properties["write_iops"] = 92180
                disk_properties["write_bandwidth"] = 508889546
            elif idata.instance() == "is4gen.2xlarge":
                disk_properties["read_iops"] = 273038
                disk_properties["read_bandwidth"] = 1628982613
                disk_properties["write_iops"] = 92182
                disk_properties["write_bandwidth"] = 1027983530
            elif idata.instance() == "is4gen.4xlarge":
                disk_properties["read_iops"] = 260493 * nr_disks
                disk_properties["read_bandwidth"] = 1217396928 * nr_disks
                disk_properties["write_iops"] = 83169 * nr_disks
                disk_properties["write_bandwidth"] = 1000390784 * nr_disks
            elif idata.instance() == "is4gen.8xlarge":
                disk_properties["read_iops"] = 273021 * nr_disks
                disk_properties["read_bandwidth"] = 1656354602 * nr_disks
                disk_properties["write_iops"] = 92233 * nr_disks
                disk_properties["write_bandwidth"] = 1028010325 * nr_disks
            elif idata.instancetype == "i4i.large":
                disk_properties["read_iops"] = 54987 * nr_disks
                disk_properties["read_bandwidth"] = 378494048 * nr_disks
                disk_properties["write_iops"] = 30459 * nr_disks
                disk_properties["write_bandwidth"] = 279713216 * nr_disks
            elif idata.instancetype == "i4i.xlarge":
                disk_properties["read_iops"] = 109954 * nr_disks
                disk_properties["read_bandwidth"] = 763580096 * nr_disks
                disk_properties["write_iops"] = 61008 * nr_disks
                disk_properties["write_bandwidth"] = 561926784 * nr_disks
            elif idata.instancetype == "i4i.2xlarge":
                disk_properties["read_iops"] = 218786 * nr_disks
                disk_properties["read_bandwidth"] = 1542559872 * nr_disks
                disk_properties["write_iops"] = 121499 * nr_disks
                disk_properties["write_bandwidth"] = 1130867072 * nr_disks
            elif idata.instancetype == "i4i.4xlarge":
                disk_properties["read_iops"] = 385400 * nr_disks
                disk_properties["read_bandwidth"] = 3087631104 * nr_disks
                disk_properties["write_iops"] = 240628 * nr_disks
                disk_properties["write_bandwidth"] = 2289281280 * nr_disks
            elif idata.instancetype == "i4i.8xlarge":
                disk_properties["read_iops"] = 384561 * nr_disks
                disk_properties["read_bandwidth"] = 3115819008 * nr_disks
                disk_properties["write_iops"] = 239980 * nr_disks
                disk_properties["write_bandwidth"] = 2289285120 * nr_disks
            elif idata.instancetype == "i4i.16xlarge":
                disk_properties["read_iops"] = 374273 * nr_disks
                disk_properties["read_bandwidth"] = 3088962816 * nr_disks
                disk_properties["write_iops"] = 240185 * nr_disks
                disk_properties["write_bandwidth"] = 2292813568 * nr_disks
            elif idata.instancetype == "i4i.32xlarge":
                disk_properties["read_iops"] = 374273 * nr_disks
                disk_properties["read_bandwidth"] = 3095612416 * nr_disks
                disk_properties["write_iops"] = 239413 * nr_disks
                disk_properties["write_bandwidth"] = 2296702976 * nr_disks
            elif idata.instancetype == "i4i.metal":
                disk_properties["read_iops"] = 379565 * nr_disks
                disk_properties["read_bandwidth"] = 3088599296 * nr_disks
                disk_properties["write_iops"] = 239549 * nr_disks
                disk_properties["write_bandwidth"] = 2302438912 * nr_disks
            if "read_iops" in disk_properties:
                properties_file = open(etcdir() + "/scylla.d/io_properties.yaml", "w")
                yaml.dump({ "disks": [ disk_properties ] }, properties_file,  default_flow_style=False)
                ioconf = open(etcdir() + "/scylla.d/io.conf", "w")
                ioconf.write("SEASTAR_IO=\"--io-properties-file={}\"\n".format(properties_file.name))
            else:
                logging.error('This is a supported AWS instance type but there are no preconfigured IO scheduler parameters for it.')
                sys.exit(1)
        elif gcp_instance().is_gce_instance():
            idata = gcp_instance()

            if idata.is_recommended_instance():
                disk_properties = {}
                disk_properties["mountpoint"] = datadir()
                nr_disks = idata.nvmeDiskCount
                # below is based on https://cloud.google.com/compute/docs/disks/local-ssd#performance
                # and https://cloud.google.com/compute/docs/disks/local-ssd#nvme
                # note that scylla iotune might measure more, this is GCP recommended
                mbs=1024*1024
                if nr_disks >= 1 and nr_disks < 4:
                    disk_properties["read_iops"] = 170000 * nr_disks
                    disk_properties["read_bandwidth"] = 660 * mbs * nr_disks
                    disk_properties["write_iops"] = 90000 * nr_disks
                    disk_properties["write_bandwidth"] = 350 * mbs * nr_disks
                elif nr_disks >= 4 and nr_disks <= 8:
                    disk_properties["read_iops"] = 680000
                    disk_properties["read_bandwidth"] = 2650 * mbs
                    disk_properties["write_iops"] = 360000
                    disk_properties["write_bandwidth"] = 1400 * mbs
                elif nr_disks == 16:
                    disk_properties["read_iops"] = 1600000
                    disk_properties["read_bandwidth"] = 4521251328
                    #below is google, above is our measured
                    #disk_properties["read_bandwidth"] = 6240 * mbs
                    disk_properties["write_iops"] = 800000
                    disk_properties["write_bandwidth"] = 2759452672
                    #below is google, above is our measured
                    #disk_properties["write_bandwidth"] = 3120 * mbs
                elif nr_disks == 24:
                    disk_properties["read_iops"] = 2400000
                    disk_properties["read_bandwidth"] = 5921532416
                    #below is google, above is our measured
                    #disk_properties["read_bandwidth"] = 9360 * mbs
                    disk_properties["write_iops"] = 1200000
                    disk_properties["write_bandwidth"] = 4663037952
                    #below is google, above is our measured
                    #disk_properties["write_bandwidth"] = 4680 * mbs
                if "read_iops" in disk_properties:
                    properties_file = open(etcdir() + "/scylla.d/io_properties.yaml", "w")
                    yaml.dump({"disks": [disk_properties]}, properties_file,  default_flow_style=False)
                    ioconf = open(etcdir() + "/scylla.d/io.conf", "w")
                    ioconf.write("SEASTAR_IO=\"--io-properties-file={}\"\n".format(properties_file.name))
                else:
                    logging.error(
                        'Did not detect number of disks in Google Cloud instance setup for auto local disk tuning.')
                    sys.exit(1)
            else:
                logging.error(
                    'This is not a recommended Google Cloud instance setup for auto local disk tuning.')
                sys.exit(1)
        elif azure_instance().is_azure_instance():
            idata = azure_instance()
            if idata.is_recommended_instance():
                disk_properties = {}
                disk_properties["mountpoint"] = datadir()
                nr_disks = idata.nvmeDiskCount
                # below is based on https://docs.microsoft.com/en-us/azure/virtual-machines/lsv2-series
                # note that scylla iotune might measure more, this is Azure recommended
                # since write properties are not defined, they come from our iotune tests
                mbs = 1024*1024
                if nr_disks == 1:
                    disk_properties["read_iops"] = 400000
                    disk_properties["read_bandwidth"] = 2000 * mbs
                    disk_properties["write_iops"] = 271696
                    disk_properties["write_bandwidth"] = 1314 * mbs
                elif nr_disks == 2:
                    disk_properties["read_iops"] = 800000
                    disk_properties["read_bandwidth"] = 4000 * mbs
                    disk_properties["write_iops"] = 552434
                    disk_properties["write_bandwidth"] = 2478 * mbs
                elif nr_disks == 4:
                    disk_properties["read_iops"] = 1500000
                    disk_properties["read_bandwidth"] = 8000 * mbs
                    disk_properties["write_iops"] = 1105063
                    disk_properties["write_bandwidth"] = 4948 * mbs
                elif nr_disks == 6:
                    disk_properties["read_iops"] = 2200000
                    disk_properties["read_bandwidth"] = 14000 * mbs
                    disk_properties["write_iops"] = 1616847
                    disk_properties["write_bandwidth"] = 7892 * mbs
                elif nr_disks == 8:
                    disk_properties["read_iops"] = 2900000
                    disk_properties["read_bandwidth"] = 16000 * mbs
                    disk_properties["write_iops"] = 2208081
                    disk_properties["write_bandwidth"] = 9694 * mbs
                elif nr_disks == 10:
                    disk_properties["read_iops"] = 3800000
                    disk_properties["read_bandwidth"] = 20000 * mbs
                    disk_properties["write_iops"] = 2546511
                    disk_properties["write_bandwidth"] = 11998 * mbs
                if "read_iops" in disk_properties:
                    properties_file = open(etcdir() + "/scylla.d/io_properties.yaml", "w")
                    yaml.dump({"disks": [disk_properties]}, properties_file,  default_flow_style=False)
                    ioconf = open(etcdir() + "/scylla.d/io.conf", "w")
                    ioconf.write("SEASTAR_IO=\"--io-properties-file={}\"\n".format(properties_file.name))
                else:
                    logging.error(
                        'Did not detect number of disks in Azure Cloud instance setup for auto local disk tuning.')
                    sys.exit(1)
            else:
                logging.error(
                    'This is not a recommended Azure Cloud instance setup for auto local disk tuning.')
                sys.exit(1)
        os.chmod(etcdir() + '/scylla.d/io_properties.yaml', 0o644)
        os.chmod(etcdir() + '/scylla.d/io.conf', 0o644)
